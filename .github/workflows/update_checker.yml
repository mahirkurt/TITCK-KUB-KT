name: TİTCK Veri Listeleri Güncelleyici

on:
  schedule:
    - cron: '0 7,19 * * *'
  
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repository
        # Bu adım, repoyu sanal makineye çeker.
        # fetch-depth: 0, tüm commit geçmişini çekerek rebase/merge işlemlerinin
        # sorunsuz çalışmasını sağlar.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run update script
        id: run_script
        run: python update_list.py

      # ❗️ DEĞİŞEN ADIM BURASI ❗️
      - name: Commit and push if files changed
        if: steps.run_script.outputs.updated == 'true'
        run: |
          # Git kullanıcı ayarlarını yap
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Script'in oluşturduğu yeni dosyaları "staging" alanına ekle
          git add data/
          
          # Değişiklikleri yerel olarak commit'le
          git commit -m "${{ steps.run_script.outputs.summary }}"
          
          # Push yapmadan önce sunucudaki olası yeni değişiklikleri çek ve kendi commit'ini onların üzerine koy (rebase)
          # "rejected" hatasını çözen anahtar komut budur.
          git pull --rebase
          
          # Şimdi birleştirilmiş geçmişi sunucuya gönder
          git push