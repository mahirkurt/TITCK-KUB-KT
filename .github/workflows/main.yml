# Dosya Yolu: .github/workflows/main.yml

# İş akışının GitHub arayüzünde görünecek adı
name: TİTCK Veri Otomasyonu (Self-Hosted Runner)

# Bu iş akışını neyin tetikleyeceğini belirler
on:
  schedule:
    # Zamanlanmış görev: Cron sözdizimi ile her gün 03:00 UTC'de çalışır.
    # (Bu, Türkiye saati ile yazın 06:00, kışın 05:00'e denk gelir.)
    - cron: '0 3 * * *'
  
  # Manuel tetikleme: GitHub arayüzündeki "Actions" sekmesinden
  # "Run workflow" butonu ile de istediğiniz zaman çalıştırabilirsiniz.
  workflow_dispatch:

jobs:
  # "update-data" adında bir iş tanımlıyoruz
  update-data:
    # --- EN ÖNEMLİ DEĞİŞİKLİK BURADA ---
    # Artık GitHub'ın sanal makinesini değil, bizim kendi
    # bilgisayarımızı kullanmasını söylüyoruz.
    runs-on: self-hosted
    # ------------------------------------

    # İşin adımları (sırayla çalıştırılır)
    steps:
      # 1. Adım: Depodaki kodları bilgisayarınızdaki runner çalışma alanına klonla
      - name: Depoyu Klonla
        uses: actions/checkout@v4

      # 2. Adım: (İsteğe bağlı ama önerilir) Belirli bir Python versiyonunu kullan
      - name: Python 3.9 Ortamını Ayarla
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3. Adım: Gerekli Python kütüphanelerini yükle
      # Bu komutlar bilgisayarınızda, runner'ın çalışma dizininde çalıştırılır.
      - name: Bağımlılıkları Yükle (requirements.txt)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Adım: Playwright'in ihtiyaç duyduğu tarayıcıları kur
      # Bilgisayarınızda kurulu olsalar bile bu adımı burada tutmak,
      # ortamın her zaman tutarlı olmasını sağlar.
      - name: Playwright Tarayıcılarını Kur
        run: python -m playwright install --with-deps

      # 5. Adım: Şifreli Dosyayı İndir
      - name: Adım 1 - Güvenli Dosyayı İndir (downloader.py)
        env:
          # GitHub Secrets'ta tanımladığımız gizli bilgileri güvenle aktar
          TITCK_USERNAME: ${{ secrets.TITCK_USERNAME }}
          TITCK_PASSWORD: ${{ secrets.TITCK_PASSWORD }}
        run: python downloader.py
      
      # 6. Adım: Tüm Ham Verileri Temizle
      - name: Adım 2 - Verileri Temizle (data_cleaner.py)
        run: python data_cleaner.py

      # 7. Adım: İşlenmiş Verileri Depoya Kaydet
      - name: Adım 3 - Değişiklikleri Depoya Gönder (Commit & Push)
        run: |
          # Git için bot kimliğini yapılandır
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Sadece 'islenmis_veriler' klasöründeki değişiklikleri ekle
          git add islenmis_veriler/
          
          # Eğer izlenen dosyalarda bir değişiklik yoksa, hiçbir şey yapma
          if [[ -z $(git status --porcelain) ]]; then
            echo "İşlenmiş verilerde herhangi bir değişiklik bulunamadı."
          else
            # Değişiklik varsa, bugünün tarihiyle commit at ve ana dala gönder
            TODAY=$(date -u +"%Y-%m-%d")
            git commit -m "Otomatik Veri Güncelleme (Self-Hosted): $TODAY"
            git push
          fi