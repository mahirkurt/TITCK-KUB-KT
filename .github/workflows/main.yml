# Dosya Yolu: .github/workflows/main.yml (Nihai Sürüm)

# İş akışının GitHub arayüzünde görünecek adı
name: Veri Temizleme Otomasyonu

# Bu iş akışını neyin tetikleyeceğini belirler
on:
  # 1. Ana dala (main/master) bir push yapıldığında çalışır.
  # Yani, ham verileri güncellediğinizde otomatik olarak tetiklenir.
  push:
    branches:
      - main
      - master

  # 2. Manuel olarak da çalıştırabilmek için
  workflow_dispatch:
  
  # 3. Zamanlanmış görev (isteğe bağlı)
  schedule:
    - cron: '0 3 * * *' # Her gün UTC 03:00'da çalışır

jobs:
  # "clean-data" adında bir iş tanımlıyoruz
  clean-data:
    # --- EN ÖNEMLİ DEĞİŞİKLİK ---
    # Artık GitHub'ın standart, hızlı ve ücretsiz sanal makinesini kullanıyoruz.
    runs-on: ubuntu-latest
    # -----------------------------

    # İşin adımları (sırayla çalıştırılır)
    steps:
      # 1. Adım: Depodaki kodları ve verileri sanal makineye klonla
      - name: Depoyu Klonla
        uses: actions/checkout@v4

      # 2. Adım: Python ortamını kur
      - name: Python 3.9 Kurulumu
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3. Adım: Gerekli Python kütüphanelerini yükle
      - name: Bağımlılıkları Yükle (requirements.txt)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # 4. Adım: Veri Temizleme Betiğini Çalıştır
      # Bu adım, data_cleaner.py'yi çalıştırarak ham verileri işler
      # ve sonuçları "islenmis_veriler" klasörüne yazar.
      - name: Verileri Temizle (data_cleaner.py)
        run: python data_cleaner.py

      # 5. Adım: İşlenmiş Verileri Depoya Kaydet
      - name: Değişiklikleri Depoya Gönder (Commit & Push)
        run: |
          # Git için bot kimliğini yapılandır
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Sadece 'islenmis_veriler' klasöründeki değişiklikleri ekle
          git add islenmis_veriler/
          
          # Eğer izlenen dosyalarda bir değişiklik yoksa, hiçbir şey yapma
          if [[ -z $(git status --porcelain) ]]; then
            echo "İşlenmiş verilerde herhangi bir değişiklik bulunamadı."
          else
            # Değişiklik varsa, bugünün tarihiyle commit at ve ana dala gönder
            TODAY=$(date -u +"%Y-%m-%d")
            git commit -m "Otomatik Veri Temizleme: $TODAY"
            git push
          fi